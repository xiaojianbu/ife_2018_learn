<template>
  <label class="{{ mainClass }}" on-click="checkboxClick">
    <span class="checkbox-input" class="{{ sanCheckboxInput }}">
      <span class="checkbox-inner"></span>
      <input type="checkbox" class="checkbox-original" s-if="trueValue || falseValue" disabled="{{ disabled }}" checked="{{=value=}}" on-change="change">
      <input type="checkbox" class="checkbox-original" s-else disabled="{{ disabled }}" checked="{{=value=}}" on-change="change">
      <span class="checkbox-label">
        <slot></slot>
      </span>
    </span>  
  </label>
</template>

<script>
  import san from 'san'

  export default {
    initData() {
      return {
        checked: false,
        disabled: false,
        trueValue: undefined,
        falseValue: undefined,
        indeterminate: false,
        isChecked: false
      }
    },
    computed: {
      mainClass() {
        let klass = ['checkbox']
        const checked = this.data.get('checked')
        const disabled = this.data.get('disabled')
        const indeterminate = this.data.get('indeterminate')
        if (checked) {
          klass.push('is-checked')
        }

        if (disabled) {
          klass.push('is-disabled')
        }

        if (disabled && indeterminate) {
          klass.push('is-disabled-indeterminate')
        }

        if (!checked && indeterminate) {
          klass.push('is-indeterminate')
        }
        return klass
      }
    },
    change() {
      const checked = this.data.get('checked')
      const disabled = this.data.get('disabled')
      
      if(!disabled){
        this.data.set('checked', !checked)
        this.fire('change', this.data.get('checked'))
      }
    },
    checkboxClick() {
      this.change()
      // const checked = this.data.get('checked')
      // const disabled = this.data.get('disabled')
      // if (!disabled) {
      //   if (checked) {
      //     this.data.set('checked', false)
      //   } else {
      //     this.data.set('checked', true)
      //   }
      //   this.fire('change', this.data.get('checked'))
      // }
    }
  }
</script>

<style>
  .checkbox {
    color: #606266;
    font-weight: 500;
    font-size: 14px;
    position: relative;
    cursor: pointer;
    display: inline-block;
    white-space: nowrap;
    user-select: none;
  }
  .checkbox-input {
    white-space: nowrap;
    cursor: pointer;
    outline: none;
    display: inline-block;
    line-height: 1;
    position: relative;
    vertical-align: middle;
  }
  .checkbox-inner {
    display: inline-block;
    position: relative;
    border: 1px solid #dcdfe6;
    border-radius: 2px;
    box-sizing: border-box;
    width: 14px;
    height: 14px;
    background-color: #fff;
    z-index: 1;
    transition: border-color 0.25s cubic-bezier(0.71, -0.46, 0.29, 1.46),
      background-color 0.25s cubic-bezier(0.71, -0.46, 0.29, 1.46);
  }
  .checkbox .checkbox-inner:hover {
    border: 1px solid #000;
  }
  .checkbox-inner:after {
    box-sizing: content-box;
    content: '';
    border: 1px solid #fff;
    border-left: 0;
    border-top: 0;
    height: 7px;
    left: 4px;
    position: absolute;
    top: 1px;
    transform: rotate(45deg) scaleY(0);
    width: 3px;
    transition: transform 0.15s cubic-bezier(0.71, -0.46, 0.88, 0.6) 0.05s;
    transform-origin: center;
  }
  .checkbox-original {
    opacity: 0;
    outline: none;
    position: absolute;
    margin: 0;
    width: 0;
    height: 0;
    z-index: -1;
  }
  .checkbox-label {
    display: inline-block;
    padding-left: 5px;
    line-height: 19px;
    font-size: 14px;
  }

  .checkbox.is-checked .checkbox-inner {
    background-color: #409eff;
    border-color: #409eff;
  }
  .checkbox.is-checked .checkbox-inner:after {
    transform: rotate(45deg) scaleY(1);
  }
  .checkbox.is-checked .checkbox-label {
    color: #409eff;
  }
  .checkbox.is-disabled .checkbox-inner {
    background-color: #edf2fc;
    border-color: #dcdfe6;
    cursor: not-allowed;
  }
  .checkbox.is-disabled .checkbox-inner:after {
    cursor: not-allowed;
    border-color: #c0c4cc;
  }
  .checkbox.is-disabled .checkbox-label {
    color: #c0c4cc;
    cursor: not-allowed;
  }
  .checkbox.is-indeterminate .checkbox-inner {
    background-color: #409eff;
    border-color: #409eff;
  }
  .checkbox.is-indeterminate .checkbox-inner:before {
    content: '';
    position: absolute;
    display: block;
    background-color: #fff;
    height: 2px;
    transform: scale(0.5);
    left: 0;
    right: 0;
    top: 5px;
  }
  .checkbox.is-disabled-indeterminate .checkbox-inner {
    background-color: #edf2fc;
    border-color: #dcdfe6;
    cursor: not-allowed;
  }
  .checkbox.is-disabled-indeterminate .checkbox-inner:before {
    content: '';
    position: absolute;
    display: block;
    background-color: #000;
    height: 2px;
    transform: scale(0.5);
    left: 0;
    right: 0;
    top: 5px;
  }
</style>
